stdout=

stderr=
[src/analyze_hir/mod.rs:47:13] &unsafe_calls = [
    Call {
        hir_id: HirId(DefId(0:3 ~ unsafe_calls_panic_method[35ad]::tag_block).12),
        def_id: DefId(0:7 ~ unsafe_calls_panic_method[35ad]::{impl#0}::call),
    },
]
[src/analyze_hir/visit.rs:36:9] &tags_state = {
    "Tag": false,
}
hir_id=HirId(DefId(0:3 ~ unsafe_calls_panic_method[35ad]::tag_block).12) fn_hir_id=HirId(DefId(0:3 ~ unsafe_calls_panic_method[35ad]::tag_block).0)
hir_id=HirId(DefId(0:3 ~ unsafe_calls_panic_method[35ad]::tag_block).16) fn_hir_id=HirId(DefId(0:3 ~ unsafe_calls_panic_method[35ad]::tag_block).0)
hir_id=HirId(DefId(0:3 ~ unsafe_calls_panic_method[35ad]::tag_block).11) fn_hir_id=HirId(DefId(0:3 ~ unsafe_calls_panic_method[35ad]::tag_block).0)
hir_id=HirId(DefId(0:3 ~ unsafe_calls_panic_method[35ad]::tag_block).10) fn_hir_id=HirId(DefId(0:3 ~ unsafe_calls_panic_method[35ad]::tag_block).0)
hir_id=HirId(DefId(0:3 ~ unsafe_calls_panic_method[35ad]::tag_block).1) fn_hir_id=HirId(DefId(0:3 ~ unsafe_calls_panic_method[35ad]::tag_block).0)
hir_id=HirId(DefId(0:3 ~ unsafe_calls_panic_method[35ad]::tag_block).17) fn_hir_id=HirId(DefId(0:3 ~ unsafe_calls_panic_method[35ad]::tag_block).0)
hir_id=HirId(DefId(0:3 ~ unsafe_calls_panic_method[35ad]::tag_block).0) fn_hir_id=HirId(DefId(0:3 ~ unsafe_calls_panic_method[35ad]::tag_block).0)
[src/analyze_hir/visit.rs:105:5] &src_body = "pub fn tag_block() {\n    let s = Struct::new();\n    unsafe {\n        s.call();\n    }\n}"
[1m[91merror[0m: [1m`Tag` is not discharged[0m
  [1m[94m-->[0m ./tests/snippets/unsafe_calls_panic_method.rs:9:9
   [1m[94m|[0m
[1m[94m 6 |[0m pub fn tag_block() {
[1m[94m 7 |[0m     let s = Struct::new();
[1m[94m 8 |[0m     unsafe {
[1m[94m 9 |[0m         s.call();
   [1m[94m|[0m         [1m[91m^^^^^^^^[0m [1m[91mFor this unsafe call.[0m
[1m[94m10 |[0m     }
[1m[94m11 |[0m }
   [1m[94m|[0m
