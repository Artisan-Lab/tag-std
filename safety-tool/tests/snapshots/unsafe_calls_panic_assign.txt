stdout=

stderr=
[src/analyze_hir/visit.rs:35:9] &tags_state = {
    "Tag": false,
}
hir_id=HirId(DefId(0:3 ~ unsafe_calls_panic_assign[42c4]::assign).3) fn_hir_id=HirId(DefId(0:3 ~ unsafe_calls_panic_assign[42c4]::assign).0)
hir_id=HirId(DefId(0:3 ~ unsafe_calls_panic_assign[42c4]::assign).5) fn_hir_id=HirId(DefId(0:3 ~ unsafe_calls_panic_assign[42c4]::assign).0)
hir_id=HirId(DefId(0:3 ~ unsafe_calls_panic_assign[42c4]::assign).2) fn_hir_id=HirId(DefId(0:3 ~ unsafe_calls_panic_assign[42c4]::assign).0)
hir_id=HirId(DefId(0:3 ~ unsafe_calls_panic_assign[42c4]::assign).1) fn_hir_id=HirId(DefId(0:3 ~ unsafe_calls_panic_assign[42c4]::assign).0)
hir_id=HirId(DefId(0:3 ~ unsafe_calls_panic_assign[42c4]::assign).13) fn_hir_id=HirId(DefId(0:3 ~ unsafe_calls_panic_assign[42c4]::assign).0)
hir_id=HirId(DefId(0:3 ~ unsafe_calls_panic_assign[42c4]::assign).0) fn_hir_id=HirId(DefId(0:3 ~ unsafe_calls_panic_assign[42c4]::assign).0)
[src/analyze_hir/visit.rs:109:5] &src_body = "pub fn assign() {\n    let f = call;\n    #[rapx::assign(property = Memo(Tag), kind = \"memo\")]\n    unsafe {\n        f()\n    };\n}"
[1m[91merror[0m: [1m`Tag` is not discharged[0m
  [1m[94m-->[0m ./tests/snippets/unsafe_calls_panic_assign.rs:12:13
   [1m[94m|[0m
[1m[94m11 |[0m pub fn assign() {
[1m[94m12 |[0m     let f = call;
   [1m[94m|[0m             [1m[91m^^^^[0m [1m[91mFor this unsafe call.[0m
[1m[94m13 |[0m     #[rapx::assign(property = Memo(Tag), kind = "memo")]
[1m[94m14 |[0m     unsafe {
[1m[94m15 |[0m         f()
[1m[94m16 |[0m     };
[1m[94m17 |[0m }
   [1m[94m|[0m
