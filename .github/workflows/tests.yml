name: Tests

on:
  push:
    branches:
  pull_request_target:

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, ubuntu-24.04-arm]
      fail-fast: false
    runs-on: ${{ matrix.os }}
    outputs:
      doc: ${{ steps.set.outputs.doc }}
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true

      - uses: dtolnay/rust-toolchain@nightly

      - uses: taiki-e/install-action@v2
        with:
          tool: cargo-expand

      - name: Install specified toolchain
        working-directory: safety-tool
        run: |
          rm -f rust-toolchain.toml
          ./gen_rust_toolchain_toml.rs std
          rustup show

      - name: Run Tests
        working-directory: safety-tool
        run: bash run.sh

      - name: Upload static files as artifact
        uses: actions/upload-pages-artifact@v3
        with:
          # doc-demo-X64 or rustdoc-demo-ARM64
          name: doc-demo-${{ runner.arch }}
          path: safety-tool/tests/basic/target/doc/

  rustc-doc:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout tag-std
        uses: actions/checkout@v4

      - name: Install toolchain
        working-directory: safety-tool
        run: |
          rm -f rust-toolchain.toml
          ./gen_rust_toolchain_toml.rs std
          rustup show

      - name: Install rustc internal docs
        working-directory: safety-tool
        run: |
          rustup toolchain list -v
          # Find toolchain path
          export TOOLCHAIN=$(rustc --print sysroot)
          echo "toolchain=\"$TOOLCHAIN\""
          # Remove rustc book
          rm $TOOLCHAIN/share/doc/rust/html/rustc -rf
          # Download rustc API docs
          rustup component add rustc-docs
          mkdir doc
          # Move the docs to deployment path
          mv $TOOLCHAIN/share/doc/rust/html/rustc doc/rustc

      - name: Upload rustc AIP docs
        uses: actions/upload-artifact@v4
        with:
          path: safety-tool/doc
          name: rustc-std
